AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Image to text service. Extract text from images. 
#process: admin will upload images to an S3 bucket, which will fire a lambda (python), which will...
# call the rekognition service for the given image
# and save the line contents to a dynadbo table
# on processing the final image, will notify an operator (nice to have)

Globals:
  Function: 
    Runtime: python3.8
    Timeout: 3 #seconds
    Tags:
      workload: image-to-text
      owner: amunoz
    Environment:
      Variables:
        TABLE_NAME: !Ref TextTable    

Resources:
  ## S3 bucket
  ImageBucket:
    Type: AWS::S3::Bucket

  ## Lambda function
  TextExtractorFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: app.handler
      Policies: AdministratorAccess
      # - S3ReadPolicy:
      #     BucketName: !Ref ImageBucket
      # - DynamoDBReadPolicy:
      #     TableName: !Ref TextTable
      # - DynamoDBWritePolicy:
      #     TableName: !Ref TextTable
      # - AWSLambdaExecute
      Events:
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref ImageBucket
            Events: s3:ObjectCreated:*
      # Environment:
      #   Variables:
      #     IMAGEBUCKETNAME: !Ref ImageBucket
  TextTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      Tags:
        workload: image-to-text
        owner: amunoz
              
Outputs:
  ImageBucketName:
    Value: !Sub "aws s3 cp ./images/sample-image.png s3://${ImageBucket}/sample-image.png"
    Description: Sample command to push an image to the Images S3 bucket 
  FunctionArn:
    Value: !Sub "sam logs -n TextExtractorFunction --stack-name ${AWS::StackName} --tail"
    Description: Sample command to get function's log
  TableArn:
    Value: !Ref TextTable
    Description: DynamoDB table name